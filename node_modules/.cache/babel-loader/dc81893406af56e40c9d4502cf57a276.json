{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\87888\\\\OneDrive\\\\Desktop\\\\projects\\\\web\\\\weather\\\\src\\\\components\\\\weather.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Forecast from \"./Forecast\";\nimport \"./weather.scss\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather() {\n  _s();\n\n  //using city name\n  const [weather, setweather] = useState([]);\n  const [city, setcity] = useState([]); //using gps (latitude and longitude)\n\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  const uriEncodedCity = encodeURIComponent(city); //for using cityname\n\n  const getWeather = e => {\n    e.preventDefault();\n    fetch(`https://community-open-weather-map.p.rapidapi.com/weather?q=${uriEncodedCity}`, {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"fd8b6de988msh1b75c7b89409fd2p173556jsnf4d277f4eee3\"\n      }\n    }).then(res => res.json()).then(response => {\n      setweather(response);\n    }).catch(err => {\n      console.error(err);\n    });\n  }; //for using gps\n\n\n  const locationWeather = async e => {\n    e.preventDefault();\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n    await fetch(`https://community-open-weather-map.p.rapidapi.com/weather?lat=${lat}&lon=${long}`, {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"fd8b6de988msh1b75c7b89409fd2p173556jsnf4d277f4eee3\"\n      }\n    }).then(res => res.json()).then(response => {\n      setweather(response);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: getWeather,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"Standard\",\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: locationWeather,\n        children: \"gps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n      responseObj: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"yVJg0M9rUp3kdn2zRVrZWIWdQLE=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/87888/OneDrive/Desktop/projects/web/weather/src/components/weather.jsx"],"names":["React","useEffect","useState","Forecast","Box","TextField","Weather","weather","setweather","city","setcity","lat","setLat","long","setLong","uriEncodedCity","encodeURIComponent","getWeather","e","preventDefault","fetch","method","headers","then","res","json","response","catch","err","console","error","locationWeather","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,gBAAP;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC,CAHgC,CAKhC;;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMa,cAAc,GAAGC,kBAAkB,CAACP,IAAD,CAAzC,CATgC,CAWhC;;AACA,QAAMQ,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CACF,+DAA8DL,cAAe,EAD3E,EAEH;AACEM,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,2BAAmB,2CADZ;AAEP,0BACE;AAHK;AAFX,KAFG,CAAL,CAWGC,IAXH,CAWSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXjB,EAYGF,IAZH,CAYSG,QAAD,IAAc;AAClBlB,MAAAA,UAAU,CAACkB,QAAD,CAAV;AACD,KAdH,EAeGC,KAfH,CAeUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAjBH;AAkBD,GApBD,CAZgC,CAkChC;;;AACA,QAAMG,eAAe,GAAG,MAAOb,CAAP,IAAa;AACnCA,IAAAA,CAAC,CAACC,cAAF;AACAa,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAUC,QAAV,EAAoB;AAC3DvB,MAAAA,MAAM,CAACuB,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAN;AACAvB,MAAAA,OAAO,CAACqB,QAAQ,CAACC,MAAT,CAAgBE,SAAjB,CAAP;AACD,KAHD;AAKA,UAAMlB,KAAK,CACR,iEAAgET,GAAI,QAAOE,IAAK,EADxE,EAET;AACEQ,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,2BAAmB,2CADZ;AAEP,0BACE;AAHK;AAFX,KAFS,CAAL,CAWHC,IAXG,CAWGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXX,EAYHF,IAZG,CAYGG,QAAD,IAAc;AAClBlB,MAAAA,UAAU,CAACkB,QAAD,CAAV;AACD,KAdG,EAeHC,KAfG,CAeIC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAjBG,CAAN;AAkBD,GAzBD;;AA2BA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEX,UAAjC;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,EAAE,EAAC,gBAAd;AAA+B,QAAA,KAAK,EAAC,UAArC;AAAgD,QAAA,OAAO,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAEc,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAExB;AAAvB;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA5EuBD,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Forecast from \"./Forecast\";\r\nimport \"./weather.scss\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nexport default function Weather() {\r\n  //using city name\r\n  const [weather, setweather] = useState([]);\r\n  const [city, setcity] = useState([]);\r\n\r\n  //using gps (latitude and longitude)\r\n  const [lat, setLat] = useState([]);\r\n  const [long, setLong] = useState([]);\r\n\r\n  const uriEncodedCity = encodeURIComponent(city);\r\n\r\n  //for using cityname\r\n  const getWeather = (e) => {\r\n    e.preventDefault();\r\n    fetch(\r\n      `https://community-open-weather-map.p.rapidapi.com/weather?q=${uriEncodedCity}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\r\n          \"x-rapidapi-key\":\r\n            \"fd8b6de988msh1b75c7b89409fd2p173556jsnf4d277f4eee3\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setweather(response);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  //for using gps\r\n  const locationWeather = async (e) => {\r\n    e.preventDefault();\r\n    navigator.geolocation.getCurrentPosition(function (position) {\r\n      setLat(position.coords.latitude);\r\n      setLong(position.coords.longitude);\r\n    });\r\n\r\n    await fetch(\r\n      `https://community-open-weather-map.p.rapidapi.com/weather?lat=${lat}&lon=${long}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\r\n          \"x-rapidapi-key\":\r\n            \"fd8b6de988msh1b75c7b89409fd2p173556jsnf4d277f4eee3\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setweather(response);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <form className=\"form\" onSubmit={getWeather}>\r\n        <TextField id=\"standard-basic\" label=\"Standard\" variant=\"standard\" />\r\n\r\n        <button className=\"button\">Yes</button>\r\n        <button className=\"button\" onClick={locationWeather}>\r\n          gps\r\n        </button>\r\n      </form>\r\n\r\n      <Forecast responseObj={weather} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}