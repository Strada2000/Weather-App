{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\87888\\\\OneDrive\\\\Desktop\\\\projects\\\\web\\\\weather\\\\src\\\\components\\\\weather.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Forecast from \"./Forecast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather() {\n  _s();\n\n  const [weather, setweather] = useState([]);\n\n  const getWeather = () => {\n    fetch(\"https://community-open-weather-map.p.rapidapi.com/climate/month?q=San%20Francisco\", {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"fd8b6de988msh1b75c7b89409fd2p173556jsnf4d277f4eee3\"\n      }\n    }).then(response => {\n      setweather(response);\n      console.log(response);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getWeather,\n      children: \"Yes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"ivviGHC6Fuf8aMDH9JMgaFlx4XI=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/87888/OneDrive/Desktop/projects/web/weather/src/components/weather.jsx"],"names":["React","useEffect","useState","Forecast","Weather","weather","setweather","getWeather","fetch","method","headers","then","response","console","log","catch","err","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACvBC,IAAAA,KAAK,CACH,mFADG,EAEH;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,2BAAmB,2CADZ;AAEP,0BACE;AAHK;AAFX,KAFG,CAAL,CAWGC,IAXH,CAWSC,QAAD,IAAc;AAClBN,MAAAA,UAAU,CAACM,QAAD,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAdH,EAeGG,KAfH,CAeUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD,KAjBH;AAkBD,GAnBD;;AAoBA,sBACE;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAET,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA5BuBH,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Forecast from \"./Forecast\";\r\n\r\nexport default function Weather() {\r\n  const [weather, setweather] = useState([]);\r\n\r\n  const getWeather = () => {\r\n    fetch(\r\n      \"https://community-open-weather-map.p.rapidapi.com/climate/month?q=San%20Francisco\",\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\r\n          \"x-rapidapi-key\":\r\n            \"fd8b6de988msh1b75c7b89409fd2p173556jsnf4d277f4eee3\",\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        setweather(response);\r\n        console.log(response);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <button onClick={getWeather}>Yes</button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}