{"ast":null,"code":"import _slicedToArray from\"C:/Users/87888/OneDrive/Desktop/projects/web/weather/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Forecast from\"./Forecast\";import TextField from\"@mui/material/TextField\";import Stack from\"@mui/material/Stack\";import Button from\"@mui/material/Button\";import\"./weather.scss\";import GpsFixedIcon from\"@mui/icons-material/GpsFixed\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Weather(){//using city name\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),weather=_useState2[0],setweather=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setcity=_useState4[1];var uriEncodedCity=encodeURIComponent(city);//for using cityname\nvar getWeather=function getWeather(e){e.preventDefault();fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?q=\".concat(uriEncodedCity,\"&units=metric\"),{method:\"GET\",headers:{\"x-rapidapi-host\":\"community-open-weather-map.p.rapidapi.com\",\"x-rapidapi-key\":process.env.REACT_APP_RAPIDAPI_KEY}}).then(function(res){return res.json();}).then(function(response){setweather(response);}).catch(function(err){console.error(err);});};//for using gps\nvar getusinglocation=function getusinglocation(e){var success=function success(position){var longitude=position.coords.longitude;var latitude=position.coords.latitude;fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?lat=\".concat(latitude,\"&lon=\").concat(longitude,\"&units=metric\"),{method:\"GET\",headers:{\"x-rapidapi-host\":\"community-open-weather-map.p.rapidapi.com\",\"x-rapidapi-key\":process.env.REACT_APP_RAPIDAPI_KEY}}).then(function(res){return res.json();}).then(function(response){setweather(response);}).catch(function(err){console.error(err);});};var error=function error(){alert(\"Unable to retrieve location.\");};var location=function location(){if(navigator.geolocation){navigator.geolocation.getCurrentPosition(success,error);}else{alert(\"Your browser does not support location tracking, or permission is denied.\");}};location();};return/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",justifyContent:\"center\",alignItems:\"center\",spacing:20,children:[/*#__PURE__*/_jsx(TextField,{className:\"text\",label:\"City-Name\",variant:\"standard\",value:city,onChange:function onChange(e){return setcity(e.target.value);}}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:getWeather,className:\"button\",children:\"Get Weather\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:getusinglocation,startIcon:/*#__PURE__*/_jsx(GpsFixedIcon,{}),className:\"button\",children:\"GPS\"})]}),/*#__PURE__*/_jsx(Forecast,{we:weather})]});}","map":{"version":3,"sources":["C:/Users/87888/OneDrive/Desktop/projects/web/weather/src/components/weather.jsx"],"names":["React","useState","Forecast","TextField","Stack","Button","GpsFixedIcon","Weather","weather","setweather","city","setcity","uriEncodedCity","encodeURIComponent","getWeather","e","preventDefault","fetch","method","headers","process","env","REACT_APP_RAPIDAPI_KEY","then","res","json","response","catch","err","console","error","getusinglocation","success","position","longitude","coords","latitude","alert","location","navigator","geolocation","getCurrentPosition","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Forecast from \"./Forecast\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport \"./weather.scss\";\r\nimport GpsFixedIcon from \"@mui/icons-material/GpsFixed\";\r\n\r\nexport default function Weather() {\r\n  //using city name\r\n  const [weather, setweather] = useState([]);\r\n  const [city, setcity] = useState([]);\r\n\r\n  const uriEncodedCity = encodeURIComponent(city);\r\n\r\n  //for using cityname\r\n  const getWeather = (e) => {\r\n    e.preventDefault();\r\n    fetch(\r\n      `https://community-open-weather-map.p.rapidapi.com/weather?q=${uriEncodedCity}&units=metric`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\r\n          \"x-rapidapi-key\": process.env.REACT_APP_RAPIDAPI_KEY,\r\n        },\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setweather(response);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  //for using gps\r\n  const getusinglocation = (e) => {\r\n    const success = (position) => {\r\n      let longitude = position.coords.longitude;\r\n      let latitude = position.coords.latitude;\r\n      fetch(\r\n        `https://community-open-weather-map.p.rapidapi.com/weather?lat=${latitude}&lon=${longitude}&units=metric`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\r\n            \"x-rapidapi-key\": process.env.REACT_APP_RAPIDAPI_KEY,\r\n          },\r\n        }\r\n      )\r\n        .then((res) => res.json())\r\n        .then((response) => {\r\n          setweather(response);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    };\r\n\r\n    const error = () => {\r\n      alert(\"Unable to retrieve location.\");\r\n    };\r\n\r\n    const location = () => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(success, error);\r\n      } else {\r\n        alert(\r\n          \"Your browser does not support location tracking, or permission is denied.\"\r\n        );\r\n      }\r\n    };\r\n\r\n    location();\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Stack\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={20}\r\n      >\r\n        <TextField\r\n          className=\"text\"\r\n          label=\"City-Name\"\r\n          variant=\"standard\"\r\n          value={city}\r\n          onChange={(e) => setcity(e.target.value)}\r\n        />\r\n\r\n        <Button variant=\"outlined\" onClick={getWeather} className=\"button\">\r\n          Get Weather\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={getusinglocation}\r\n          startIcon={<GpsFixedIcon />}\r\n          className=\"button\"\r\n        >\r\n          GPS\r\n        </Button>\r\n      </Stack>\r\n      <Forecast we={weather} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}