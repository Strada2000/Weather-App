{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\87888\\\\OneDrive\\\\Desktop\\\\projects\\\\web\\\\weather\\\\src\\\\components\\\\weather.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Forecast from \"./Forecast\";\nimport TextField from \"@mui/material/TextField\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport \"./weather.scss\";\nimport GpsFixedIcon from \"@mui/icons-material/GpsFixed\";\nimport { bottomNavigationClasses } from \"@mui/material\";\nimport { green } from \"@mui/material/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather() {\n  _s();\n\n  //using city name\n  const [weather, setweather] = useState([]);\n  const [city, setcity] = useState([]);\n  const uriEncodedCity = encodeURIComponent(city); //for using cityname\n\n  const getWeather = e => {\n    e.preventDefault();\n    fetch(`https://community-open-weather-map.p.rapidapi.com/weather?q=${uriEncodedCity}&units=metric`, {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"fd8b6de988msh1b75c7b89409fd2p173556jsnf4d277f4eee3\"\n      }\n    }).then(res => res.json()).then(response => {\n      setweather(response);\n    }).catch(err => {\n      console.error(err);\n    });\n  }; //for using gps\n\n\n  const getusinglocation = e => {\n    const success = position => {\n      let longitude = position.coords.longitude;\n      let latitude = position.coords.latitude;\n      fetch(`https://community-open-weather-map.p.rapidapi.com/weather?lat=${latitude}&lon=${longitude}&units=metric`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"fd8b6de988msh1b75c7b89409fd2p173556jsnf4d277f4eee3\"\n        }\n      }).then(res => res.json()).then(response => {\n        setweather(response);\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n\n    const error = () => {\n      alert(\"Unable to retrieve location.\");\n    };\n\n    const location = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(success, error);\n      } else {\n        alert(\"Your browser does not support location tracking, or permission is denied.\");\n      }\n    };\n\n    location();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      spacing: 20,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"text\",\n        label: \"City-Name\",\n        variant: \"standard\",\n        value: city,\n        onChange: e => setcity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: getWeather,\n        className: \"button\",\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: getusinglocation,\n        startIcon: /*#__PURE__*/_jsxDEV(GpsFixedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 22\n        }, this),\n        className: \"button\",\n        children: \"GPS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n      we: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"QV1k0sg3cASSoWVeJ1DOFaqWcuM=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/87888/OneDrive/Desktop/projects/web/weather/src/components/weather.jsx"],"names":["React","useEffect","useState","Forecast","TextField","Stack","Button","GpsFixedIcon","bottomNavigationClasses","green","Weather","weather","setweather","city","setcity","uriEncodedCity","encodeURIComponent","getWeather","e","preventDefault","fetch","method","headers","then","res","json","response","catch","err","console","error","getusinglocation","success","position","longitude","coords","latitude","alert","location","navigator","geolocation","getCurrentPosition","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Forecast from \"./Forecast\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport \"./weather.scss\";\r\nimport GpsFixedIcon from \"@mui/icons-material/GpsFixed\";\r\nimport { bottomNavigationClasses } from \"@mui/material\";\r\nimport { green } from \"@mui/material/colors\";\r\n\r\nexport default function Weather() {\r\n  //using city name\r\n  const [weather, setweather] = useState([]);\r\n  const [city, setcity] = useState([]);\r\n\r\n  const uriEncodedCity = encodeURIComponent(city);\r\n\r\n  //for using cityname\r\n  const getWeather = (e) => {\r\n    e.preventDefault();\r\n    fetch(\r\n      `https://community-open-weather-map.p.rapidapi.com/weather?q=${uriEncodedCity}&units=metric`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\r\n          \"x-rapidapi-key\":\r\n            \"fd8b6de988msh1b75c7b89409fd2p173556jsnf4d277f4eee3\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        setweather(response);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  //for using gps\r\n  const getusinglocation = (e) => {\r\n    const success = (position) => {\r\n      let longitude = position.coords.longitude;\r\n      let latitude = position.coords.latitude;\r\n      fetch(\r\n        `https://community-open-weather-map.p.rapidapi.com/weather?lat=${latitude}&lon=${longitude}&units=metric`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\r\n            \"x-rapidapi-key\":\r\n              \"fd8b6de988msh1b75c7b89409fd2p173556jsnf4d277f4eee3\",\r\n          },\r\n        }\r\n      )\r\n        .then((res) => res.json())\r\n        .then((response) => {\r\n          setweather(response);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    };\r\n\r\n    const error = () => {\r\n      alert(\"Unable to retrieve location.\");\r\n    };\r\n\r\n    const location = () => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(success, error);\r\n      } else {\r\n        alert(\r\n          \"Your browser does not support location tracking, or permission is denied.\"\r\n        );\r\n      }\r\n    };\r\n\r\n    location();\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Stack\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={20}\r\n      >\r\n        <TextField\r\n          className=\"text\"\r\n          label=\"City-Name\"\r\n          variant=\"standard\"\r\n          value={city}\r\n          onChange={(e) => setcity(e.target.value)}\r\n        />\r\n\r\n        <Button variant=\"outlined\" onClick={getWeather} className=\"button\">\r\n          Get Weather\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={getusinglocation}\r\n          startIcon={<GpsFixedIcon />}\r\n          className=\"button\"\r\n        >\r\n          GPS\r\n        </Button>\r\n      </Stack>\r\n      <Forecast we={weather} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}